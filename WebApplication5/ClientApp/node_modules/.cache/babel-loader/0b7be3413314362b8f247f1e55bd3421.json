{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel Andersson\\\\Desktop\\\\Pontus2\\\\ReactAndIdentity\\\\WebApplication5\\\\ClientApp\\\\src\\\\components\\\\NavMenu.js\";\nimport React, { Component } from 'react';\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { setCookie, getCookie } from '../Helpers';\nimport './NavMenu.css';\nexport class NavMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n    this.state = {\n      collapsed: true\n    };\n  }\n\n  componentDidMount() {\n    this.login();\n  }\n\n  toggleNavbar() {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  }\n\n  render() {\n    return React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      className: \"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\",\n      light: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(NavbarBrand, {\n      tag: Link,\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"WebApplication5\"), React.createElement(NavbarToggler, {\n      onClick: this.toggleNavbar,\n      className: \"mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(Collapse, {\n      className: \"d-sm-inline-flex flex-sm-row-reverse\",\n      isOpen: !this.state.collapsed,\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"navbar-nav flex-grow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      tag: Link,\n      className: \"text-dark\",\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Home\")), React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      tag: Link,\n      className: \"text-dark\",\n      to: \"/counter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Counter\")), React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      tag: Link,\n      className: \"text-dark\",\n      to: \"/fetch-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Fetch data\")))))));\n  }\n\n  async login() {\n    const loginResponse = await fetch('https://localhost:44325/login', {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      method: 'POST',\n      credentials: 'include',\n      body: JSON.stringify({\n        Email: \"hej@hej.com\",\n        Password: \"Secret123!\"\n      })\n    });\n\n    if (loginResponse.ok) {\n      var XSRF = getCookie('XSRF-REQUEST-TOKEN');\n      const apiResponse = await fetch('https://localhost:44325/api/weatherforecast', {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'X-XSRF-TOKEN': XSRF\n        },\n        method: 'GET',\n        credentials: 'include'\n      });\n      console.log(apiResponse.status);\n      var body = await apiResponse.json();\n      console.log(body); //this.setState({ apiResponse.body });\n    }\n  }\n\n}\nNavMenu.displayName = NavMenu.name;","map":{"version":3,"sources":["C:/Users/Daniel Andersson/Desktop/Pontus2/ReactAndIdentity/WebApplication5/ClientApp/src/components/NavMenu.js"],"names":["React","Component","Collapse","Container","Navbar","NavbarBrand","NavbarToggler","NavItem","NavLink","Link","setCookie","getCookie","NavMenu","constructor","props","toggleNavbar","bind","state","collapsed","componentDidMount","login","setState","render","loginResponse","fetch","headers","method","credentials","body","JSON","stringify","Email","Password","ok","XSRF","apiResponse","console","log","status","json","displayName","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { setCookie, getCookie } from '../Helpers'\r\nimport './NavMenu.css';\r\n\r\nexport class NavMenu extends Component {\r\n    static displayName = NavMenu.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggleNavbar = this.toggleNavbar.bind(this);\r\n        this.state = {\r\n            collapsed: true\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.login();\r\n    }\r\n    toggleNavbar() {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header>\r\n                <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\" light>\r\n                    <Container>\r\n                        <NavbarBrand tag={Link} to=\"/\">WebApplication5</NavbarBrand>\r\n                        <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n                        <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\r\n                            <ul className=\"navbar-nav flex-grow\">\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/\">Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/counter\">Counter</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/fetch-data\">Fetch data</NavLink>\r\n                                </NavItem>\r\n                            </ul>\r\n                        </Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n            </header>\r\n        );\r\n    }\r\n\r\n    async login() {\r\n        const loginResponse = await fetch('https://localhost:44325/login', {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            body: JSON.stringify({ Email: \"hej@hej.com\", Password: \"Secret123!\" })\r\n        });\r\n        if (loginResponse.ok) {\r\n            var XSRF = getCookie('XSRF-REQUEST-TOKEN');\r\n            const apiResponse = await fetch('https://localhost:44325/api/weatherforecast', {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'X-XSRF-TOKEN': XSRF\r\n                },\r\n                method: 'GET',\r\n                credentials: 'include'\r\n            });\r\n            console.log(apiResponse.status);\r\n            var body = await apiResponse.json();\r\n            console.log(body);\r\n            //this.setState({ apiResponse.body });\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}